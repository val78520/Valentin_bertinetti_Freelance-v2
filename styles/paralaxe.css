
.section1 {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 100vh;
  /* For text formatting. */
  display: flex;
  align-items: center;
  justify-content: flex-start;
  background-position: cover;
}

.title_para
{
  margin-left: 45px;
  margin-bottom: 100px;
}

.title_para2
{
  margin-right: 80px;

}


.t1
{
  font-family: "gotham";
  -webkit-font-family: "gotham";
  color: #2f3947;
  font-size: 40px;$
  font-weight: 700;
}

.t2
{
  color: #3c8482;
  font-family: "gotham";
  -webkit-font-family: "gotham";
  font-size: 40px;
  font-weight: 1000;
}

.section2 {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 650px;

  /* For text formatting. */
}

.section3 {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 1375px;
  /* For text formatting. */
}

.section4 {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 2300px;
  background: grey;

  /* For text formatting. */
}

.section5 {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 300px;
  background: black;

  /* For text formatting. */
}
.section6 {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 100px;
  background: black;

  /* For text formatting. */
}

.section7 {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 2150px;
  background: black;
  margin-top: 100px;
  /* For text formatting. */
}

.static
{
  background: white;
  display: flex;
  justify-content: center;
  align-items: center;
}

.static2
{
  background: #eaeaea;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 2px 10px rgba(0,0,0,0.2);
}
.static3
{
  background: #2f446f;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 2px 10px rgba(0,0,0,0.2);
}
.static4
{
  background: #2f6f6d;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 2px 10px rgba(0,0,0,0.2);
}
.static5
{
  background: white;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 70px;
}

.static6
{
  background: white;
  display: flex;
  justify-content: center;
  align-items: center;
}


.parallax::after {
  /* Display and position the pseudo-element */
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
  transform: translateZ(-1px) scale(1.5);
  /* Force the background image to fill the whole element. */
  background-size: 100%;
  /* Keep the image from overlapping sibling elements. */
  z-index: -1;
}

/* The styling for the static div. */


/* Sets the actual background images to adorable kitties. This part is crucial. */

}
